name: Rust

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build_linux:
    name: Build (Linux)
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Install CMake
      run: sudo apt remove cmake && pip install cmake --upgrade
    - name: Install Clang and LLVM
      run: sudo apt install libopencv-dev clang libclang-dev
    - name: Install OpenCV
      run: sudo apt install libopencv-dev python3-opencv
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose

  build_windows:
    name: Build (Windows)
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3
      - name: Install CMake
        run: choco install cmake --upgrade
      - name: Install LLVM
        run: choco install llvm
      - name: Install OpenCV
        run: choco install opencv
      - name: vcpkg install llvm opencv4
        run: vcpkg install llvm opencv4
      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-
      - name: Build
        env:
          OPENCV_LINK_LIBS: opencv_world412
          OPENCV_LINK_PATHS: C:\tools\opencv\build\include
          OPENCV_INCLUDE_PATHS: C:\tools\opencv\build\x64\vc14\lib
        run: cargo build --verbose
      - name: Run tests
        env:
          OPENCV_LINK_LIBS: opencv_world412
          OPENCV_LINK_PATHS: C:\tools\opencv\build\include
          OPENCV_INCLUDE_PATHS: C:\tools\opencv\build\x64\vc14\lib
        run: cargo test --verbose
